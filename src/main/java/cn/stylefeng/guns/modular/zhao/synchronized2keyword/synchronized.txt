对象锁:
    包括方法锁（默认锁对象为this当前实例对象）和同步代码块锁（自己指定锁对象）

    代码块形式：手动指定锁对象
    方法锁形式：synchronized修饰普通方法，锁对象默认为this

类锁：
    指synchronized修饰静态的方法或指定锁为Class对象
    形式1：synchronized加在static方法上
    形式2：synchronized(*.class)代码块

    本质：所谓的类锁，是Class对象的锁而已
    用法：类锁只能在同一时刻被一个对象拥有




多线程访问同步方法的7种情况
1、两个线程同时访问一个对象的同步方法   --》 同一个锁，相互等待
2、两个线程访问两个对象的同步方法      --》 相互之间不干扰，不同的锁
3、两个线程访问的是synchronized的静态方法  --》锁生效，一个一个执行
4、同时访问同步访问与非同步方法       --》非同步方法不受到影响
5、访问同一个对象的不同的普通方法     --》同一个锁（this），相互等待
6、同时访问静态synchronized和非静态synchronized方法     --》同时执行，相互之间不影响
7、方法抛异常后，会释放锁           --》会释放锁，不同于Lock锁

总结：
1、一把锁只能被一个线程获取，没有拿到锁的线程必须等待
2、每个实例都对应自己的一个锁，不通过实例之间互不影响
3、无论是方法正常执行完毕或者抛出异常，都会释放锁


性质
1、可重入
    好处：避免死锁、提升封装性
    粒度：线程而非调用
2、不可中断
